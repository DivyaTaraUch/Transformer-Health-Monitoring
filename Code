#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <LiquidCrystal_I2C.h>
#include <WiFiClient.h>
#include <DHT.h>

#define trigger_pin 12
#define Echo_pin 14

long duration;
int distance;


const int ADC_pin = A0;  
int sensor_reading = 0; 
float voltage = 0;
int y = 0; 
float current = 0;


LiquidCrystal_I2C lcd(0x27,20,4);
const char* ssid = "raj";
const char* password = "12345678";
const char* server = "api.thingspeak.com";


//variables
#define DHT11PIN 2


DHT dht(DHT11PIN, DHT11);

void setup() {

  pinMode(trigger_pin, OUTPUT);
  pinMode(Echo_pin, INPUT);
  
  //wifi setup
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi");
  

  //lcd setup
  lcd.begin();                      
  lcd.backlight();
  lcd.setCursor(0,0);
  lcd.print("Transformer measuring");

  //dht setup
  dht.begin();
  
  
}

void loop() {

  sensor_reading = analogRead(ADC_pin);
  voltage = sensor_reading * 3.3 /1023;
  y = map(sensor_reading, 0, 1023, 0, 220);
  current = voltage/2;
  Serial.println(y);
  Serial.print("  ");
  Serial.print(current);
  Serial.println("  ");

  

  digitalWrite(trigger_pin, LOW); 
  delayMicroseconds(2);


  digitalWrite(trigger_pin, HIGH);  
  delayMicroseconds(10);            
  digitalWrite(trigger_pin, LOW);   


  duration = pulseIn(Echo_pin, HIGH); 
  distance= duration*0.034/2; 


  //Serial.print("Distance: ");
  //Serial.print(distance);
  //Serial.println(" cm");
  delay(1000);
  
  
  float humi = dht.readHumidity();
  float temp = dht.readTemperature();
  //Serial.print("Temperature: ");
  //Serial.print(temp);
  //Serial.print("ÂºC ");
  //Serial.print("Humidity: ");
  //Serial.println(humi);
  delay(2000);


  lcd.clear();
  
  lcd.setCursor(0,0);
  lcd.print("T:");
  lcd.print(temp);
  lcd.setCursor(9,0);
  lcd.print("L:");
  lcd.print(distance);
  
  lcd.setCursor(0,1);
  lcd.print("V:");
  lcd.print(y);
  lcd.setCursor(9,1);
  lcd.print("I:");
  lcd.print(current);
  
  
  updateTemp(temp);
  delay(5000);
  updateDist(distance);
  delay(5000);
  updateVoltage(y);
  delay(5000);
  updateCurrent(current);
  delay(5000);
}



void updateTemp(float temp){
  WiFiClient client;
  HTTPClient http;
  String url = "http://api.thingspeak.com/update?api_key=80AAGEECU5LA59BC&field1=";
  url += String(temp);
  http.begin(client, url);
  int httpCode = http.GET();
  if (httpCode > 0) {
    Serial.println("Temperatue uploaded to ThingSpeak");
    Serial.println(String(temp));
  } else {
    Serial.println("Error uploading data to ThingSpeak");
  }
  http.end();
}

void updateDist(float dist){
  WiFiClient client;
  HTTPClient http;
  String url = "http://api.thingspeak.com/update?api_key=80AAGEECU5LA59BC&field2=";
  url += String(dist);
  http.begin(client, url);
  int httpCode = http.GET();
  if (httpCode > 0) {
    Serial.println("Distance uploaded to ThingSpeak");
    Serial.println(String(dist));
  } else {
    Serial.println("Error uploading data to ThingSpeak");
  }
  http.end();
}


void updateVoltage(float voltage){
  WiFiClient client;
  HTTPClient http;
  String url = "http://api.thingspeak.com/update?api_key=80AAGEECU5LA59BC&field3=";
  url += String(voltage);
  http.begin(client, url);
  int httpCode = http.GET();
  if (httpCode > 0) {
    Serial.println("Voltage uploaded to ThingSpeak");
    Serial.println(String(voltage));
  } else {
    Serial.println("Error uploading data to ThingSpeak");
  }
  http.end();
}


void updateCurrent(float current){
  WiFiClient client;
  HTTPClient http;
  String url = "http://api.thingspeak.com/update?api_key=80AAGEECU5LA59BC&field4=";
  url += String(current);
  http.begin(client, url);
  int httpCode = http.GET();
  if (httpCode > 0) {
    Serial.println("Current uploaded to ThingSpeak");
    Serial.println(String(current));
  } else {
    Serial.println("Error uploading data to ThingSpeak");
  }
  http.end();
}
